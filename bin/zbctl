#!/usr/bin/env node
const chalk = require("chalk");
const checkForUpdate = require("update-check");
const { spawnSync } = require("child_process");
const pkg = require("../package");

const osvar = process.platform;
let binary = process.argv.slice(1)[0];
if (osvar === "darwin") {
  binary += "-cli.darwin";
} else if (osvar === "win32") {
  binary += "-cli.exe";
} else {
  binary += "-cli.linux";
}
const version = pkg.version;

const args = process.argv.slice(2);

if (args && args.length > 0 && args[0] === "version") {
  console.log(`NPM package version: ${version}`);
}

const child = spawnSync(binary, [...args]);

child.error && console.error(child.error.toString());
console.log(child.stdout.toString());
console.error(child.stderr.toString());

doUpdateCheck().then(() => process.exit(child.status));

async function doUpdateCheck() {
  let update = null;

  try {
    update = await checkForUpdate(pkg, {
      interval: 60000, // For how long to cache latest version (default: 1 day)
    });
  } catch (err) {
    console.error(`Failed to check for updates: ${err}`);
  }

  if (update) {
    console.log(
      chalk.yellow(
        `\nAn updated version is available. The latest version is ${update.latest}. Please update by running `
      ) + chalk.blue("npm i -g zbctl")
    );
  }
}
